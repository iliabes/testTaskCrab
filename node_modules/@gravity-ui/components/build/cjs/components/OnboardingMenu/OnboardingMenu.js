"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.OnboardingMenu = void 0;
const react_1 = __importDefault(require("react"));
const uikit_1 = require("@gravity-ui/uikit");
const cn_1 = require("../utils/cn");
const OnboardingMenuItem_1 = require("./components/OnboardingMenuItem");
const OnboardingMenuItemImage_1 = require("./components/OnboardingMenuItemImage");
const OnboardingMenuItemText_1 = require("./components/OnboardingMenuItemText");
const i18n_1 = __importDefault(require("./i18n"));
require("./OnboardingMenu.css");
const cnOnboardingMenu = (0, cn_1.block)('onboarding-menu');
const OnboardingMenuParent = ({ title, progress, icon, expanded, onExpand, onCollapseClick, onCompleteClick, collapseButtonText, completeButtonText, className, liningClassName, children, }) => {
    const onExpandCallback = () => {
        const newExpand = !expanded;
        if (onExpand) {
            onExpand(newExpand);
        }
    };
    const onCollapseClickCallback = (event) => {
        const newExpand = !expanded;
        if (onCollapseClick) {
            onCollapseClick(event);
        }
        if (onExpand) {
            onExpand(newExpand);
        }
    };
    return (react_1.default.createElement("div", { className: cnOnboardingMenu(null, className) },
        react_1.default.createElement("div", { className: cnOnboardingMenu('content', { expand: expanded }) },
            react_1.default.createElement("div", { className: cnOnboardingMenu('header', { expand: expanded }) },
                react_1.default.createElement("button", { className: cnOnboardingMenu('title', { expand: expanded }), onClick: onExpandCallback, tabIndex: 0 },
                    icon ? (react_1.default.createElement(uikit_1.Icon, { data: icon, width: 20, height: 20, className: cnOnboardingMenu('title-icon') })) : null,
                    react_1.default.createElement(uikit_1.Text, { variant: expanded ? 'subheader-3' : 'subheader-2', ellipsisLines: 3, className: cnOnboardingMenu('title-text') }, title)),
                react_1.default.createElement(uikit_1.Progress, { size: expanded ? 's' : 'xs', stack: [
                        {
                            value: progress,
                            color: 'var(--g-color-base-positive-heavy)',
                        },
                        {
                            value: 100 - progress,
                            color: 'var(--g-color-base-background)',
                        },
                    ] })),
            expanded && (react_1.default.createElement(react_1.default.Fragment, null,
                react_1.default.createElement("div", { className: cnOnboardingMenu('lining', liningClassName) }, children),
                react_1.default.createElement("div", { className: cnOnboardingMenu('buttons') },
                    react_1.default.createElement(uikit_1.Button, { view: "normal-contrast", size: "m", onClick: onCollapseClickCallback, width: "max" }, collapseButtonText !== null && collapseButtonText !== void 0 ? collapseButtonText : (0, i18n_1.default)('collapse')),
                    react_1.default.createElement(uikit_1.Button, { view: "outlined-contrast", onClick: onCompleteClick, size: "m", width: "max" }, completeButtonText !== null && completeButtonText !== void 0 ? completeButtonText : (0, i18n_1.default)('complete'))))))));
};
OnboardingMenuParent.displayName = 'OnboardingMenu';
exports.OnboardingMenu = Object.assign(OnboardingMenuParent, {
    Item: OnboardingMenuItem_1.OnboardingMenuItem,
    ItemText: OnboardingMenuItemText_1.OnboardingMenuItemText,
    ItemImage: OnboardingMenuItemImage_1.OnboardingMenuItemImage,
});
