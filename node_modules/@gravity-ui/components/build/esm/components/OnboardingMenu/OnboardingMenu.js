import React from 'react';
import { Button, Icon, Progress, Text } from '@gravity-ui/uikit';
import { block } from '../utils/cn';
import { OnboardingMenuItem } from './components/OnboardingMenuItem';
import { OnboardingMenuItemImage } from './components/OnboardingMenuItemImage';
import { OnboardingMenuItemText } from './components/OnboardingMenuItemText';
import i18n from './i18n';
import './OnboardingMenu.css';
const cnOnboardingMenu = block('onboarding-menu');
const OnboardingMenuParent = ({ title, progress, icon, expanded, onExpand, onCollapseClick, onCompleteClick, collapseButtonText, completeButtonText, className, liningClassName, children, }) => {
    const onExpandCallback = () => {
        const newExpand = !expanded;
        if (onExpand) {
            onExpand(newExpand);
        }
    };
    const onCollapseClickCallback = (event) => {
        const newExpand = !expanded;
        if (onCollapseClick) {
            onCollapseClick(event);
        }
        if (onExpand) {
            onExpand(newExpand);
        }
    };
    return (React.createElement("div", { className: cnOnboardingMenu(null, className) },
        React.createElement("div", { className: cnOnboardingMenu('content', { expand: expanded }) },
            React.createElement("div", { className: cnOnboardingMenu('header', { expand: expanded }) },
                React.createElement("button", { className: cnOnboardingMenu('title', { expand: expanded }), onClick: onExpandCallback, tabIndex: 0 },
                    icon ? (React.createElement(Icon, { data: icon, width: 20, height: 20, className: cnOnboardingMenu('title-icon') })) : null,
                    React.createElement(Text, { variant: expanded ? 'subheader-3' : 'subheader-2', ellipsisLines: 3, className: cnOnboardingMenu('title-text') }, title)),
                React.createElement(Progress, { size: expanded ? 's' : 'xs', stack: [
                        {
                            value: progress,
                            color: 'var(--g-color-base-positive-heavy)',
                        },
                        {
                            value: 100 - progress,
                            color: 'var(--g-color-base-background)',
                        },
                    ] })),
            expanded && (React.createElement(React.Fragment, null,
                React.createElement("div", { className: cnOnboardingMenu('lining', liningClassName) }, children),
                React.createElement("div", { className: cnOnboardingMenu('buttons') },
                    React.createElement(Button, { view: "normal-contrast", size: "m", onClick: onCollapseClickCallback, width: "max" }, collapseButtonText !== null && collapseButtonText !== void 0 ? collapseButtonText : i18n('collapse')),
                    React.createElement(Button, { view: "outlined-contrast", onClick: onCompleteClick, size: "m", width: "max" }, completeButtonText !== null && completeButtonText !== void 0 ? completeButtonText : i18n('complete'))))))));
};
OnboardingMenuParent.displayName = 'OnboardingMenu';
export const OnboardingMenu = Object.assign(OnboardingMenuParent, {
    Item: OnboardingMenuItem,
    ItemText: OnboardingMenuItemText,
    ItemImage: OnboardingMenuItemImage,
});
