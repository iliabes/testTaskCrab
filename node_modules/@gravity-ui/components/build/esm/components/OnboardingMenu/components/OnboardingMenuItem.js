import React from 'react';
import { CircleCheckFill, Clock } from '@gravity-ui/icons';
import { ArrowToggle, Disclosure, Icon, Skeleton } from '@gravity-ui/uikit';
import { block } from '../../utils/cn';
import './OnboardingMenuItem.css';
const ICON_SIZE = 20;
const cnOnboardingMenuItem = block('onboarding-menu-item');
export const OnboardingMenuItem = ({ title, status, children, defaultExpanded, buttons, hasDivider = true, loading = false, }) => {
    const icon = React.useMemo(() => {
        if (status === 'pending') {
            return (React.createElement(Icon, { size: ICON_SIZE, data: Clock, className: cnOnboardingMenuItem('status-icon_pending') }));
        }
        if (status === 'completed') {
            return (React.createElement(Icon, { size: ICON_SIZE, data: CircleCheckFill, className: cnOnboardingMenuItem('status-icon') }));
        }
        return (React.createElement(Icon, { size: ICON_SIZE, data: CircleCheckFill, className: cnOnboardingMenuItem('status-icon_disabled') }));
    }, [status]);
    const summary = (React.createElement("div", { className: cnOnboardingMenuItem('collapse-header') },
        React.createElement("div", { className: cnOnboardingMenuItem('icon') }, icon),
        React.createElement("span", { className: cnOnboardingMenuItem('title') }, title)));
    const header = children ? (React.createElement(Disclosure, { size: "l", className: cnOnboardingMenuItem('title-header'), defaultExpanded: defaultExpanded },
        React.createElement(Disclosure.Summary, null, (props) => (React.createElement("button", Object.assign({}, props, { className: cnOnboardingMenuItem('title-summary') }),
            summary,
            React.createElement(ArrowToggle, { direction: props.expanded ? 'top' : 'bottom' })))),
        React.createElement("div", { className: cnOnboardingMenuItem('node') }, children),
        buttons && React.createElement("div", { className: cnOnboardingMenuItem('buttons') }, buttons))) : (summary);
    if (loading) {
        return (React.createElement(React.Fragment, null,
            React.createElement("div", { className: cnOnboardingMenuItem('skeleton') },
                React.createElement(Skeleton, { className: cnOnboardingMenuItem('skeleton-avatar'), style: { width: `${ICON_SIZE}px`, height: `${ICON_SIZE}px` } }),
                React.createElement(Skeleton, { className: cnOnboardingMenuItem('skeleton-title') })),
            hasDivider && React.createElement("div", { className: cnOnboardingMenuItem('divider') })));
    }
    return (React.createElement("div", { className: cnOnboardingMenuItem() },
        React.createElement("div", { className: cnOnboardingMenuItem('collapse') }, header),
        hasDivider && React.createElement("div", { className: cnOnboardingMenuItem('divider') })));
};
