import type { SetObject } from '../typings';
export type CompareStringsOptions = {
    ignoreCase?: boolean;
};
export declare function floorMod(x: number, n: number): number;
export declare function isLeapYear(year: number): boolean;
export declare function daysInMonth(year: number, month: number): number;
export declare function tsToObject(ts: number, offset: number): {
    year: number;
    month: number;
    date: number;
    hour: number;
    minute: number;
    second: number;
    millisecond: number;
};
export declare function objToTS(obj: Record<keyof ReturnType<typeof tsToObject>, number>): number;
type NormalizedUnit = 'year' | 'month' | 'date' | 'day' | 'hour' | 'minute' | 'second' | 'millisecond' | 'quarter' | 'weekNumber' | 'isoWeekNumber' | 'isoWeekday';
export declare function normalizeComponent(component: string): "year" | "month" | "day" | "hour" | "minute" | "second" | "millisecond" | "date" | "quarter" | "isoWeekday" | "weekNumber" | "isoWeekNumber";
export declare function normalizeDateComponents(components: SetObject): Partial<Record<NormalizedUnit, number>>;
export declare function offsetFromString(value: string | undefined): number | null;
export {};
